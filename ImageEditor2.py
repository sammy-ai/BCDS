# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ImageEditor.ui'
#
# Created by: PyQt5 UI code generator 5.15.8
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtGui import QImage
from PyQt5.QtGui import QPixmap
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np
import cv2
import imutils


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1594, 830)
        MainWindow.setStyleSheet("background-color: rgb(165, 165, 165);\n"
                                 "color: rgb(255, 255, 255);\n"
                                 "background-color: rgb(31, 31, 31);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.undo_button = QtWidgets.QPushButton(self.centralwidget)
        self.undo_button.setMaximumSize(QtCore.QSize(65, 16777215))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("code/icons/undo.png"),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.undo_button.setIcon(icon)
        self.undo_button.setDefault(False)
        self.undo_button.setFlat(True)
        self.undo_button.setObjectName("undo_button")
        self.horizontalLayout_2.addWidget(self.undo_button)
        self.redo_button = QtWidgets.QPushButton(self.centralwidget)
        self.redo_button.setMaximumSize(QtCore.QSize(65, 16777215))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("code/icons/redo.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.redo_button.setIcon(icon1)
        self.redo_button.setFlat(True)
        self.redo_button.setObjectName("redo_button")
        self.horizontalLayout_2.addWidget(self.redo_button)
        self.detect_button = QtWidgets.QPushButton(self.centralwidget)
        self.detect_button.setMaximumSize(QtCore.QSize(60, 16777215))
        self.detect_button.setStyleSheet("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("code/icons/radar.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.detect_button.setIcon(icon2)
        self.detect_button.setFlat(False)
        self.detect_button.setObjectName("detect_button")
        self.horizontalLayout_2.addWidget(self.detect_button)
        self.generate_report = QtWidgets.QPushButton(self.centralwidget)
        self.generate_report.setMaximumSize(QtCore.QSize(60, 23))
        self.generate_report.setStyleSheet("radius {\n"
                                           "    10px;\n"
                                           "}")
        self.generate_report.setObjectName("generate_report")
        self.horizontalLayout_2.addWidget(self.generate_report)
        self.profile = QtWidgets.QPushButton(self.centralwidget)
        self.profile.setMaximumSize(QtCore.QSize(60, 16777215))
        self.profile.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("code/icons/user.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.profile.setIcon(icon3)
        self.profile.setFlat(True)
        self.profile.setObjectName("profile")
        self.horizontalLayout_2.addWidget(self.profile)
        self.gridLayout.addLayout(self.horizontalLayout_2, 0, 4, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(8)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.label.setFont(font)
        self.label.setStyleSheet("font: 75 8pt \"MS Shell Dlg 2\";")
        self.label.setObjectName("label")
        self.gridLayout.addWidget(
            self.label, 0, 3, 1, 1, QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.prev_button = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(8)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.prev_button.setFont(font)
        self.prev_button.setStyleSheet("font: 8pt \"MS Shell Dlg 2\";")
        self.prev_button.setObjectName("prev_button")
        self.horizontalLayout_3.addWidget(self.prev_button)
        self.nex_button = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(8)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.nex_button.setFont(font)
        self.nex_button.setStyleSheet("font: 8pt \"MS Shell Dlg 2\";")
        self.nex_button.setObjectName("nex_button")
        self.horizontalLayout_3.addWidget(self.nex_button)
        self.gridLayout.addLayout(self.horizontalLayout_3, 3, 3, 1, 2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.insert_new = QtWidgets.QPushButton(self.centralwidget)
        self.insert_new.setMinimumSize(QtCore.QSize(60, 30))
        self.insert_new.setMaximumSize(QtCore.QSize(60, 30))
        self.insert_new.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "color: rgb(255, 255, 255);")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("code/icons/insert.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.insert_new.setIcon(icon4)
        self.insert_new.setDefault(True)
        self.insert_new.setFlat(True)
        self.insert_new.setObjectName("insert_new")
        self.horizontalLayout.addWidget(self.insert_new)
        self.open_folder = QtWidgets.QPushButton(self.centralwidget)
        self.open_folder.setMinimumSize(QtCore.QSize(60, 30))
        self.open_folder.setMaximumSize(QtCore.QSize(60, 30))
        self.open_folder.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("code/icons/folder.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.open_folder.setIcon(icon5)
        self.open_folder.setDefault(True)
        self.open_folder.setFlat(True)
        self.open_folder.setObjectName("open_folder")
        self.horizontalLayout.addWidget(self.open_folder)
        self.save_button = QtWidgets.QPushButton(self.centralwidget)
        self.save_button.setMinimumSize(QtCore.QSize(60, 30))
        self.save_button.setMaximumSize(QtCore.QSize(60, 30))
        self.save_button.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("code/icons/save.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.save_button.setIcon(icon6)
        self.save_button.setDefault(True)
        self.save_button.setFlat(True)
        self.save_button.setObjectName("save_button")
        self.horizontalLayout.addWidget(self.save_button)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setMaximumSize(QtCore.QSize(200, 16777215))
        self.stackedWidget.setStyleSheet("background-color: rgb(32, 32, 32);\n"
                                         "")
        self.stackedWidget.setObjectName("stackedWidget")
        self.imageInfo = QtWidgets.QWidget()
        self.imageInfo.setObjectName("imageInfo")
        self.imageInformation = QtWidgets.QLabel(self.imageInfo)
        self.imageInformation.setGeometry(QtCore.QRect(10, 60, 181, 641))
        self.imageInformation.setText("")
        self.imageInformation.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.imageInformation.setObjectName("imageInformation")
        self.info = QtWidgets.QLabel(self.imageInfo)
        self.info.setGeometry(QtCore.QRect(60, 10, 61, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.info.setFont(font)
        self.info.setAlignment(QtCore.Qt.AlignCenter)
        self.info.setObjectName("info")
        self.stackedWidget.addWidget(self.imageInfo)
        self.adjustment = QtWidgets.QWidget()
        self.adjustment.setObjectName("adjustment")
        self.layoutWidget = QtWidgets.QWidget(self.adjustment)
        self.layoutWidget.setGeometry(QtCore.QRect(1, 4, 161, 611))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.light = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.light.setFont(font)
        self.light.setObjectName("light")
        self.verticalLayout_4.addWidget(self.light)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.brightness_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.brightness_label.setFont(font)
        self.brightness_label.setScaledContents(True)
        self.brightness_label.setAlignment(QtCore.Qt.AlignCenter)
        self.brightness_label.setObjectName("brightness_label")
        self.horizontalLayout_4.addWidget(self.brightness_label)
        self.brightness_value = QtWidgets.QLabel(self.layoutWidget)
        self.brightness_value.setText("")
        self.brightness_value.setObjectName("brightness_value")
        self.horizontalLayout_4.addWidget(self.brightness_value)
        self.verticalLayout_4.addLayout(self.horizontalLayout_4)
        self.brightness_slider = QtWidgets.QSlider(self.layoutWidget)
        self.brightness_slider.setOrientation(QtCore.Qt.Horizontal)
        self.brightness_slider.setObjectName("brightness_slider")
        self.brightness_slider.setMinimum(-100)
        self.brightness_slider.setMaximum(100)
        self.brightness_slider.setValue(0)
        self.verticalLayout_4.addWidget(self.brightness_slider)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.exposure_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.exposure_label.setFont(font)
        self.exposure_label.setObjectName("exposure_label")
        self.horizontalLayout_5.addWidget(self.exposure_label)
        self.exposure_value = QtWidgets.QLabel(self.layoutWidget)
        self.exposure_value.setText("")
        self.exposure_value.setObjectName("exposure_value")
        self.horizontalLayout_5.addWidget(self.exposure_value)
        self.verticalLayout_4.addLayout(self.horizontalLayout_5)
        self.exposure_slider = QtWidgets.QSlider(self.layoutWidget)
        self.exposure_slider.setOrientation(QtCore.Qt.Horizontal)
        self.exposure_slider.setObjectName("exposure_slider")
        self.exposure_slider.setMinimum(-100)
        self.exposure_slider.setMaximum(100)
        self.exposure_slider.setValue(0)
        self.verticalLayout_4.addWidget(self.exposure_slider)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.contrast_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.contrast_label.setFont(font)
        self.contrast_label.setObjectName("contrast_label")
        self.horizontalLayout_6.addWidget(self.contrast_label)
        self.contrast_value = QtWidgets.QLabel(self.layoutWidget)
        self.contrast_value.setText("")
        self.contrast_value.setObjectName("contrast_value")
        self.horizontalLayout_6.addWidget(self.contrast_value)
        self.verticalLayout_4.addLayout(self.horizontalLayout_6)
        self.contrast_slider = QtWidgets.QSlider(self.layoutWidget)
        self.contrast_slider.setOrientation(QtCore.Qt.Horizontal)
        self.contrast_slider.setObjectName("contrast_slider")
        self.contrast_slider.setMinimum(-100)
        self.contrast_slider.setMaximum(100)
        self.contrast_slider.setValue(0)
        self.verticalLayout_4.addWidget(self.contrast_slider)
        self.color_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.color_label.setFont(font)
        self.color_label.setObjectName("color_label")
        self.verticalLayout_4.addWidget(self.color_label)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.saturation_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.saturation_label.setFont(font)
        self.saturation_label.setObjectName("saturation_label")
        self.horizontalLayout_7.addWidget(self.saturation_label)
        self.saturation_value = QtWidgets.QLabel(self.layoutWidget)
        self.saturation_value.setText("")
        self.saturation_value.setObjectName("saturation_value")
        self.horizontalLayout_7.addWidget(self.saturation_value)
        self.verticalLayout_4.addLayout(self.horizontalLayout_7)
        self.saturation_slider = QtWidgets.QSlider(self.layoutWidget)
        self.saturation_slider.setOrientation(QtCore.Qt.Horizontal)
        self.saturation_slider.setObjectName("saturation_slider")
        self.saturation_slider.setMinimum(-100)
        self.saturation_slider.setMaximum(100)
        self.saturation_slider.setValue(0)
        self.verticalLayout_4.addWidget(self.saturation_slider)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.warmth_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.warmth_label.setFont(font)
        self.warmth_label.setObjectName("warmth_label")
        self.horizontalLayout_8.addWidget(self.warmth_label)
        self.warmth_value = QtWidgets.QLabel(self.layoutWidget)
        self.warmth_value.setText("")
        self.warmth_value.setObjectName("warmth_value")
        self.horizontalLayout_8.addWidget(self.warmth_value)
        self.verticalLayout_4.addLayout(self.horizontalLayout_8)
        self.warmth_slider = QtWidgets.QSlider(self.layoutWidget)
        self.warmth_slider.setOrientation(QtCore.Qt.Horizontal)
        self.warmth_slider.setObjectName("warmth_slider")
        self.warmth_slider.setMinimum(-100)
        self.warmth_slider.setMaximum(100)
        self.warmth_slider.setValue(0)
        self.verticalLayout_4.addWidget(self.warmth_slider)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.tint_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tint_label.setFont(font)
        self.tint_label.setObjectName("tint_label")
        self.horizontalLayout_9.addWidget(self.tint_label)
        self.tint_value = QtWidgets.QLabel(self.layoutWidget)
        self.tint_value.setText("")
        self.tint_value.setObjectName("tint_value")
        self.horizontalLayout_9.addWidget(self.tint_value)
        self.verticalLayout_4.addLayout(self.horizontalLayout_9)
        self.tint_slider = QtWidgets.QSlider(self.layoutWidget)
        self.tint_slider.setOrientation(QtCore.Qt.Horizontal)
        self.tint_slider.setObjectName("tint_slider")
        self.tint_slider.setMinimum(-100)
        self.tint_slider.setMaximum(100)
        self.tint_slider.setValue(0)
        self.verticalLayout_4.addWidget(self.tint_slider)
        self.stackedWidget.addWidget(self.adjustment)
        self.edit = QtWidgets.QWidget()
        self.edit.setObjectName("edit")
        self.layoutWidget1 = QtWidgets.QWidget(self.edit)
        self.layoutWidget1.setGeometry(QtCore.QRect(2, 22, 161, 191))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.pencil_button = QtWidgets.QToolButton(self.layoutWidget1)
        self.pencil_button.setMinimumSize(QtCore.QSize(35, 35))
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("code/icons/pencil.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pencil_button.setIcon(icon7)
        self.pencil_button.setObjectName("pencil_button")
        self.verticalLayout_5.addWidget(
            self.pencil_button, 0, QtCore.Qt.AlignHCenter)
        self.eraser_button = QtWidgets.QToolButton(self.layoutWidget1)
        self.eraser_button.setMinimumSize(QtCore.QSize(35, 35))
        self.eraser_button.setMaximumSize(QtCore.QSize(16777213, 16777215))
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("code/icons/eraser.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.eraser_button.setIcon(icon8)
        self.eraser_button.setObjectName("eraser_button")
        self.verticalLayout_5.addWidget(
            self.eraser_button, 0, QtCore.Qt.AlignHCenter)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.thickness_label = QtWidgets.QLabel(self.layoutWidget1)
        self.thickness_label.setObjectName("thickness_label")
        self.horizontalLayout_11.addWidget(self.thickness_label)
        self.thickness_value = QtWidgets.QLabel(self.layoutWidget1)
        self.thickness_value.setObjectName("thickness_value")
        self.horizontalLayout_11.addWidget(self.thickness_value)
        self.verticalLayout_5.addLayout(self.horizontalLayout_11)
        self.thickness_slider = QtWidgets.QSlider(self.layoutWidget1)
        self.thickness_slider.setOrientation(QtCore.Qt.Horizontal)
        self.thickness_slider.setObjectName("thickness_slider")
        self.verticalLayout_5.addWidget(self.thickness_slider)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.opacity_label = QtWidgets.QLabel(self.layoutWidget1)
        self.opacity_label.setObjectName("opacity_label")
        self.horizontalLayout_10.addWidget(self.opacity_label)
        self.opacity_value = QtWidgets.QLabel(self.layoutWidget1)
        self.opacity_value.setObjectName("opacity_value")
        self.horizontalLayout_10.addWidget(self.opacity_value)
        self.verticalLayout_5.addLayout(self.horizontalLayout_10)
        self.opacity_slider = QtWidgets.QSlider(self.layoutWidget1)
        self.opacity_slider.setOrientation(QtCore.Qt.Horizontal)
        self.opacity_slider.setObjectName("opacity_slider")
        self.verticalLayout_5.addWidget(self.opacity_slider)
        self.stackedWidget.addWidget(self.edit)
        self.addText = QtWidgets.QWidget()
        self.addText.setObjectName("addText")
        self.text_label = QtWidgets.QLabel(self.addText)
        self.text_label.setGeometry(QtCore.QRect(40, 10, 61, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.text_label.setFont(font)
        self.text_label.setObjectName("text_label")
        self.font_combo = QtWidgets.QComboBox(self.addText)
        self.font_combo.setGeometry(QtCore.QRect(10, 40, 161, 22))
        self.font_combo.setObjectName("font_combo")
        self.font_combo.addItem("")
        self.font_combo.addItem("")
        self.font_combo.addItem("")
        self.bold_button = QtWidgets.QPushButton(self.addText)
        self.bold_button.setGeometry(QtCore.QRect(0, 90, 75, 23))
        self.bold_button.setObjectName("bold_button")
        self.italics_button = QtWidgets.QPushButton(self.addText)
        self.italics_button.setGeometry(QtCore.QRect(90, 90, 75, 23))
        self.italics_button.setObjectName("italics_button")
        self.stackedWidget.addWidget(self.addText)
        self.verticalLayout.addWidget(self.stackedWidget)
        self.gridLayout.addLayout(self.verticalLayout, 1, 0, 2, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.image_label = QtWidgets.QLabel(self.centralwidget)
        self.image_label.setAutoFillBackground(False)
        self.image_label.setText("")
        self.image_label.setScaledContents(True)
        self.image_label.setObjectName("image_label")
        self.verticalLayout_2.addWidget(self.image_label)
        self.gridLayout.addLayout(self.verticalLayout_2, 1, 3, 2, 2)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.zoom_in = QtWidgets.QPushButton(self.centralwidget)
        self.zoom_in.setMaximumSize(QtCore.QSize(60, 16777215))
        self.zoom_in.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("code/icons/zoom-in.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.zoom_in.setIcon(icon9)
        self.zoom_in.setObjectName("zoom_in")
        self.verticalLayout_3.addWidget(self.zoom_in)
        self.zoom_out = QtWidgets.QPushButton(self.centralwidget)
        self.zoom_out.setMaximumSize(QtCore.QSize(60, 16777215))
        self.zoom_out.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("code/icons/zoom-out.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.zoom_out.setIcon(icon10)
        self.zoom_out.setObjectName("zoom_out")
        self.verticalLayout_3.addWidget(self.zoom_out)
        self.adjustment_button = QtWidgets.QPushButton(self.centralwidget)
        self.adjustment_button.setMaximumSize(QtCore.QSize(60, 16777215))
        self.adjustment_button.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("code/icons/brightness.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.adjustment_button.setIcon(icon11)
        self.adjustment_button.setObjectName("adjustment_button")
        self.verticalLayout_3.addWidget(self.adjustment_button)
        self.rotate_button = QtWidgets.QPushButton(self.centralwidget)
        self.rotate_button.setMaximumSize(QtCore.QSize(60, 16777215))
        self.rotate_button.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(
            "code/icons/rotate_image.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.rotate_button.setIcon(icon12)
        self.rotate_button.setObjectName("rotate_button")
        self.verticalLayout_3.addWidget(self.rotate_button)
        self.editImage_button = QtWidgets.QPushButton(self.centralwidget)
        self.editImage_button.setMaximumSize(QtCore.QSize(60, 16777215))
        self.editImage_button.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("code/icons/edit-image.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editImage_button.setIcon(icon13)
        self.editImage_button.setObjectName("editImage_button")
        self.verticalLayout_3.addWidget(self.editImage_button)
        self.split_button = QtWidgets.QPushButton(self.centralwidget)
        self.split_button.setMaximumSize(QtCore.QSize(60, 16777215))
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(
            "code/icons/split-screen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.split_button.setIcon(icon14)
        self.split_button.setObjectName("split_button")
        self.verticalLayout_3.addWidget(self.split_button)
        self.expand_button = QtWidgets.QPushButton(self.centralwidget)
        self.expand_button.setMaximumSize(QtCore.QSize(60, 16777215))
        self.expand_button.setText("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("code/icons/expand.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.expand_button.setIcon(icon15)
        self.expand_button.setObjectName("expand_button")
        self.verticalLayout_3.addWidget(self.expand_button)
        self.text_button = QtWidgets.QPushButton(self.centralwidget)
        self.text_button.setMaximumSize(QtCore.QSize(60, 16777215))
        self.text_button.setText("")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("code/icons/text.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.text_button.setIcon(icon16)
        self.text_button.setObjectName("text_button")
        self.verticalLayout_3.addWidget(self.text_button)
        self.lock_button = QtWidgets.QPushButton(self.centralwidget)
        self.lock_button.setMaximumSize(QtCore.QSize(60, 16777215))
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("code/icons/padlock.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.lock_button.setIcon(icon17)
        self.lock_button.setObjectName("lock_button")
        self.verticalLayout_3.addWidget(self.lock_button)
        self.info_button = QtWidgets.QPushButton(self.centralwidget)
        self.info_button.setMaximumSize(QtCore.QSize(60, 16777215))
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("code/icons/info.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.info_button.setIcon(icon18)
        self.info_button.setObjectName("info_button")
        self.verticalLayout_3.addWidget(self.info_button)
        self.gridLayout.addLayout(self.verticalLayout_3, 1, 1, 2, 1)
        spacerItem = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem, 1, 2, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1594, 21))
        self.menubar.setStyleSheet("menuFile:hover\n"
                                   "{\n"
                                   "    color: blue;\n"
                                   "}")
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setAutoFillBackground(False)
        self.menuFile.setStyleSheet("QMenu:hover{\n"
                                    "    background-color: rgb(36, 36, 36);\n"
                                    "}")
        self.menuFile.setObjectName("menuFile")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.actionOpen_Image = QtWidgets.QAction(MainWindow)
        self.actionOpen_Image.setIcon(icon4)
        self.actionOpen_Image.setObjectName("actionOpen_Image")
        self.actionOpen_Folder = QtWidgets.QAction(MainWindow)
        self.actionOpen_Folder.setIcon(icon5)
        self.actionOpen_Folder.setObjectName("actionOpen_Folder")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setIcon(icon6)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionShare = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("code/icons/share.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShare.setIcon(icon19)
        self.actionShare.setObjectName("actionShare")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionBCDS_Help = QtWidgets.QAction(MainWindow)
        self.actionBCDS_Help.setObjectName("actionBCDS_Help")
        self.actionAbout_BCDS = QtWidgets.QAction(MainWindow)
        self.actionAbout_BCDS.setObjectName("actionAbout_BCDS")
        self.menuFile.addAction(self.actionOpen_Image)
        self.menuFile.addAction(self.actionOpen_Folder)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionShare)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuHelp.addAction(self.actionBCDS_Help)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout_BCDS)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # actionListeners here
        self.insert_new.clicked.connect(self.loadImage)
        self.actionOpen_Image.triggered.connect(self.loadImage)
        self.actionQuit.triggered.connect(exit)
        self.detect_button.clicked.connect(self.scanImage)
        self.adjustment_button.clicked.connect(self.showAdjustment)
        self.text_button.clicked.connect(self.showAddText)
        self.editImage_button.clicked.connect(self.showEditImage)
        self.info_button.clicked.connect(self.showInfo)
        self.contrast_slider.valueChanged.connect(self.update_image)
        self.brightness_slider.valueChanged.connect(self.update_image)
        self.saturation_slider.valueChanged.connect(self.adjust_saturation)
        self.exposure_slider.valueChanged.connect(self.adjust_exposure)
        self.warmth_slider.valueChanged.connect(self.adjust_warmth)
        self.tint_slider.valueChanged.connect(self.adjust_tint)

    # STACKED WIDGETS

    def showAdjustment(self):
        self.stackedWidget.setCurrentWidget(self.adjustment)

    def showEditImage(self):
        self.stackedWidget.setCurrentWidget(self.edit)

    def showAddText(self):
        self.stackedWidget.setCurrentWidget(self.addText)

    def showInfo(self):
        self.stackedWidget.setCurrentWidget(self.imageInfo)

    # new detect code here

    def loadImage(self):
        # Open a file dialog to select an image file
        options = QFileDialog.Options()
        options |= QFileDialog.DontUseNativeDialog
        file_filter = "Image (*.jpg *.jpeg *.png)"
        self.filename, _ = QFileDialog.getOpenFileName(
            None, "Open Image", "", file_filter, options=options)

        if self.filename:
            # Read the image from the selected file
            self.original_image = cv2.imread(self.filename)
            self.image = self.original_image.copy()
            self.setPhoto(self.image)
            # Store the file path
            self.image_path = self.filename
            self.imageInformation.clear()

    def setPhoto(self, image):
        """This function will take image input and resize it
            only for display purpose and convert it to QImage to set at the label.
            """
        self.tmp = image
        image = imutils.resize(image, width=256)
        frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        image = QImage(
            frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
        self.image_label.setPixmap(QtGui.QPixmap.fromImage(image))

    def scanImage(self):
        # Load the pre-trained model for breast cancer detection
        # model = load_model('breast_cancer_model_after_research_1.model')
        model = load_model('breast_cancer_model_after_research_1.model')

        # Load and preprocess the selected image
        img = image.load_img(self.image_path, target_size=(256, 256))
        img_array = image.img_to_array(img)
        img_array = np.expand_dims(img_array, axis=0)
        img_array = img_array / 255.0

        # Make a prediction using the loaded model
        prediction = model.predict(img_array)[0]
        if prediction > 0.5:
            result = 'Cancerous'
        else:
            result = 'Non-cancerous'

        # Display the result and probability on the labels
        self.imageInformation.setText(
            'Result: {}, \nProbability: {}'.format(result, prediction[0]))

     # ADJUSTMENT

    # CONTRAST

    def convert_cv_to_pixmap(self, cv_img):
        height, width, channel = cv_img.shape
        bytes_per_line = 3 * width
        q_img = QImage(cv_img.data, width, height,
                       bytes_per_line, QImage.Format_RGB888)
        return QPixmap.fromImage(q_img)

    def update_image(self):
        # Get the current values of the sliders
        contrast = self.contrast_slider.value()
        brightness = self.brightness_slider.value()
        saturation = self.saturation_slider.value()
        exposure = self.exposure_slider.value()
        warmth = self.warmth_slider.value()

        # Apply the contrast and brightness adjustments to the original image
        alpha = (contrast + 100) / 100
        beta = brightness - 50
        self.image = cv2.convertScaleAbs(
            self.original_image, alpha=alpha, beta=beta)

        # Apply the saturation adjustment to the image
        hsv_image = cv2.cvtColor(self.image, cv2.COLOR_RGB2HSV)
        hsv_image[:, :, 1] = hsv_image[:, :, 1] + saturation
        self.image = cv2.cvtColor(hsv_image, cv2.COLOR_HSV2RGB)

        # Apply the exposure adjustment to the image
        lab_image = cv2.cvtColor(self.image, cv2.COLOR_RGB2LAB)
        l_channel, a_channel, b_channel = cv2.split(lab_image)
        l_channel = cv2.add(l_channel, exposure)
        lab_image = cv2.merge((l_channel, a_channel, b_channel))
        self.image = cv2.cvtColor(lab_image, cv2.COLOR_LAB2RGB)

        # Apply the warmth adjustment to the image
        self.adjust_warmth(warmth)

        # Update the displayed image
        self.image_label.setPixmap(self.convert_cv_to_pixmap(self.image))


    # BRIGHTNESS

    def adjust_brightness(self, value):
        """
        Adjusts the brightness of the image.
        """
        image = self.original_image.copy()
        alpha = 1.0
        beta = value

        # Apply brightness adjustment
        adjusted_image = cv2.convertScaleAbs(image, alpha=alpha, beta=beta)

        # Display the adjusted image in the label
        qimage = QtGui.QImage(
            adjusted_image.data, adjusted_image.shape[1], adjusted_image.shape[0], QtGui.QImage.Format_RGB888)
        pixmap = QtGui.QPixmap.fromImage(qimage)
        self.image_label.setPixmap(pixmap)

    # SATURATION

    def adjust_saturation(self, value):
        """
        Adjusts the saturation of the image and updates the display.
        """
        image = self.original_image.copy()

        # Convert image to HSV color space
        hsv_image = cv2.cvtColor(image, cv2.COLOR_RGB2HSV)

        # Adjust saturation value
        hsv_image[:, :, 1] = hsv_image[:, :, 1] + value

        # Convert image back to RGB color space
        image = cv2.cvtColor(hsv_image, cv2.COLOR_HSV2RGB)

        # Display the updated image in the label
        qimage = QtGui.QImage(
            image.data, image.shape[1], image.shape[0], QtGui.QImage.Format_RGB888)
        pixmap = QtGui.QPixmap.fromImage(qimage)
        self.image_label.setPixmap(pixmap)

    # EXPOSURE
    def adjust_exposure(self, value):
        """
        Adjusts the exposure of the image and displays the result in the image label.
        """
        # Convert the image to LAB color space
        lab_image = cv2.cvtColor(self.original_image, cv2.COLOR_RGB2LAB)

        # Split the channels
        l_channel, a_channel, b_channel = cv2.split(lab_image)

        # Scale the L channel
        l_channel = cv2.add(l_channel, value)

        # Merge the channels back
        lab_image = cv2.merge((l_channel, a_channel, b_channel))

        # Convert the image back to RGB color space
        result_image = cv2.cvtColor(lab_image, cv2.COLOR_LAB2RGB)

        # Display the result in the image label
        qimage = QtGui.QImage(
            result_image.data, result_image.shape[1], result_image.shape[0], QtGui.QImage.Format_RGB888)
        pixmap = QtGui.QPixmap.fromImage(qimage)
        self.image_label.setPixmap(pixmap)

    # WARMTH
    def adjust_warmth(self, value):
        """
        Adjusts the warmth of the image and updates the display.
        """
        image = self.original_image.copy()

        # Create an overlay to add warmth to the image
        h, w, ch = image.shape
        overlay = np.zeros((h, w, ch), dtype='uint8')
        if value > 0:
            overlay[:, :, 0] = value
        else:
            overlay[:, :, 2] = -value

        # Apply the overlay to the image
        image = cv2.addWeighted(image, 1, overlay, 1, 0)

        # Display the adjusted image in the label
        qimage = QtGui.QImage(
            image.data, image.shape[1], image.shape[0], QtGui.QImage.Format_RGB888)
        pixmap = QtGui.QPixmap.fromImage(qimage)
        self.image_label.setPixmap(pixmap)

    # TINT
    def adjust_tint(self, value):
        """
        Adjusts the tint of the image and updates the display.
        """
        image = self.original_image.copy()

        # Convert image to HSV color space
        hsv_image = cv2.cvtColor(image, cv2.COLOR_RGB2HSV)

        # Adjust hue value
        hsv_image[:, :, 0] = hsv_image[:, :, 0] + value

        # Convert image back to RGB color space
        image = cv2.cvtColor(hsv_image, cv2.COLOR_HSV2RGB)

        # Display the adjusted image in the label
        qimage = QtGui.QImage(
            image.data, image.shape[1], image.shape[0], QtGui.QImage.Format_RGB888)
        pixmap = QtGui.QPixmap.fromImage(qimage)
        self.image_label.setPixmap(pixmap)




    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.undo_button.setText(_translate("MainWindow", "Undo"))
        self.redo_button.setText(_translate("MainWindow", "Redo"))
        self.detect_button.setText(_translate("MainWindow", "Detect"))
        self.generate_report.setText(_translate("MainWindow", "GR Report"))
        self.label.setText(_translate("MainWindow", "Image Name"))
        self.prev_button.setText(_translate("MainWindow", "<"))
        self.nex_button.setText(_translate("MainWindow", ">"))
        self.insert_new.setText(_translate("MainWindow", "New"))
        self.info.setText(_translate("MainWindow", "Info"))
        self.light.setText(_translate("MainWindow", "Light"))
        self.brightness_label.setText(_translate("MainWindow", "Brightness"))
        self.exposure_label.setText(_translate("MainWindow", "Exposure"))
        self.contrast_label.setText(_translate("MainWindow", "Contrast"))
        self.color_label.setText(_translate("MainWindow", "Color"))
        self.saturation_label.setText(_translate("MainWindow", "Saturation"))
        self.warmth_label.setText(_translate("MainWindow", "Warmth"))
        self.tint_label.setText(_translate("MainWindow", "Tint"))
        self.pencil_button.setText(_translate("MainWindow", "Pencil"))
        self.eraser_button.setText(_translate("MainWindow", "Eraser"))
        self.thickness_label.setText(_translate("MainWindow", "Thickness"))
        self.thickness_value.setText(_translate("MainWindow", "TextLabel"))
        self.opacity_label.setText(_translate("MainWindow", "Opacity"))
        self.opacity_value.setText(_translate("MainWindow", "TextLabel"))
        self.text_label.setText(_translate("MainWindow", "Text"))
        self.font_combo.setCurrentText(_translate("MainWindow", "Arial"))
        self.font_combo.setItemText(0, _translate("MainWindow", "Arial"))
        self.font_combo.setItemText(1, _translate("MainWindow", "Segoe UI"))
        self.font_combo.setItemText(
            2, _translate("MainWindow", "Times New Roman"))
        self.bold_button.setText(_translate("MainWindow", "Bold"))
        self.italics_button.setText(_translate("MainWindow", "Italics"))
        self.split_button.setText(_translate("MainWindow", "Split"))
        self.lock_button.setText(_translate("MainWindow", "Lock"))
        self.info_button.setText(_translate("MainWindow", "info"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionOpen_Image.setText(_translate("MainWindow", "Open Image"))
        self.actionOpen_Folder.setText(_translate("MainWindow", "Open Folder"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As..."))
        self.actionShare.setText(_translate("MainWindow", "Share"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionBCDS_Help.setText(_translate("MainWindow", "BCDS Help"))
        self.actionAbout_BCDS.setText(_translate("MainWindow", "About BCDS"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
